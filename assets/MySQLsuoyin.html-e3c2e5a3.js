import{_ as l,o as n,c as t,b as e,d as a,a as i}from"./app-a6bbcd8f.js";const o={},r=e("h2",{id:"索引查找数据",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#索引查找数据","aria-hidden":"true"},"#"),a(" 索引查找数据")],-1),c=e("p",null,"索引用来快速查找记录，如果没有索引那么就会扫描一整张表；索引的原理将无序的数据变成有序的查询",-1),s=e("ol",null,[e("li",null,"把创建了索引的列进行排序（对表中字段进行排序的存储结构就是索引）"),e("li",null,"对排序结果生成倒排表"),e("li",null,"在倒排表内容上拼上数据地址链"),e("li",null,"在查询数据时，先拿到倒排表，再取出地址链，定位取出数据")],-1),d=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"TIP"),e("p",null,"虽然索引可以提高查询速度，但是它也需要占用存储空间，并且在插入和更新数据时， 索引也需要进行相应的维护，这会带来一定的开销。在使用索引时，需要权衡查询效率和存储空间以及维护开销。")],-1),h=i('<h2 id="b树-b-树" tabindex="-1"><a class="header-anchor" href="#b树-b-树" aria-hidden="true">#</a> B树（B-树）</h2><p>平衡多路查找树，与平衡二叉树不同的是，平衡二叉树只有两个子树，而B树则有多个子树。</p><ol><li>节点之间有序</li><li>节点内部元素有序</li></ol><h2 id="b-树" tabindex="-1"><a class="header-anchor" href="#b-树" aria-hidden="true">#</a> B+树</h2><ol><li>是对B树的一种优化，拥有B树特点</li><li>内部节点不存数据，只有叶子节点才存储数据</li><li>所有叶子结点包含全部的关键字信息，以及指向含有关键字信息记录的指针，叶子节点本身依据关键字有序链接</li></ol><p>MySQL的索引使用B+树存储，B+树通过对数据进行排序可以提升查询效率； 一个节点可以存储多个元素，从而B+树的高度不会太高； Innodb页实则就是B+树的一个节点（默认16kb）； 利用B+树叶子节点存储了所有数据并进行排序，叶子结点之间有指针，可以很好支持全表扫描、范围查找等SQL。</p><h2 id="最左匹配原则" tabindex="-1"><a class="header-anchor" href="#最左匹配原则" aria-hidden="true">#</a> 最左匹配原则</h2><p>该原则主要针对联合索引的使用进行规定。当在MySQL建立联合索引时， 系统会遵守最左前缀匹配原则，即从联合索引的最左边开始匹配。</p><p>针对a,b,c三个字段建立了一个联合索引， 那么再写一个SQL时，就一定要提供a字段的条件，这样才能用到联合索引， 由于这是建立在a,b,c三个字段的联合索引，底层的B+树是按照a,b,c三个字段从左往右去比较大小进行排序的，所以想要利用B+树进行快速查询也得符合这个规则</p>',9),u=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"TIP"),e("p",null,"联合索引 a b c"),e("ol",null,[e("li",null,"where a = 1 and b = 2 and c = 3，【abc不论顺序】这样的情况索引是能能够生效的"),e("li",null,"where a = 1 and b < 2 and c = 3，这样的情况索引a会生效，b和c不会生效"),e("li",null,"where b = 2 and c = 3，这样的情况索引b和c都不会生效")])],-1),p=[r,c,s,d,h,u];function _(b,w){return n(),t("div",null,p)}const B=l(o,[["render",_],["__file","MySQLsuoyin.html.vue"]]);export{B as default};
