import{_ as n,o as s,c as a,a as t}from"./app-a6bbcd8f.js";const e={},p=t(`<h2 id="scan-packages" tabindex="-1"><a class="header-anchor" href="#scan-packages" aria-hidden="true">#</a> scan(packages)</h2><p>AnnotationConfigApplicationContext#AnnotationConfigApplicationContext()</p><p>|-AnnotationConfigApplicationContext#scan(String...)</p><p>|-ClassPathBeanDefinitionScanner#scan(String...)</p><p>|-ClassPathBeanDefinitionScanner#doScan(String...)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 根据包路径查找符合条件的BeanDefinition</span>
<span class="token comment">// 遍历完善BeanDefinition信息</span>
<span class="token comment">// 添加到BeanFactory</span>
<span class="token comment">// 不做@Configuration配置类的处理</span>
<span class="token keyword">protected</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> <span class="token function">doScan</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> basePackages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> beanDefinitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> basePackage <span class="token operator">:</span> basePackages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取所有符合条件的BeanDefinition跳过不合条件的BeanDefinition</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> candidates <span class="token operator">=</span> <span class="token function">findCandidateComponents</span><span class="token punctuation">(</span>basePackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 完善BeanDefinition信息</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span> candidate <span class="token operator">:</span> candidates<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 绑定BeanDefinition的作用域（scope）信息</span>
            <span class="token class-name">ScopeMetadata</span> scopeMetadata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopeMetadataResolver<span class="token punctuation">.</span><span class="token function">resolveScopeMetadata</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            candidate<span class="token punctuation">.</span><span class="token function">setScope</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">.</span><span class="token function">getScopeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 生成BeanName（查看配置是否指定beanName，没有就默认使用首字母小写的beanName）</span>
            <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanNameGenerator<span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 设置一些默认值</span>
            <span class="token comment">// 	1.设置自动注入模式（ByType、ByName、Constructor，默认NO，根据约定ByType或者ByName）</span>
            <span class="token comment">// 	2.设置依赖检查（CHECK_OBJECTS【对象引用检查】、CHECK_SIMPLE【简单属性检查】、、CHECK_ALL【检查对象和简单属性】，默认CHECK_NONE，不做相关性检查）</span>
            <span class="token comment">// 	3.设置初始化的方法名，是否强制初始化方法为false</span>
            <span class="token comment">// 	4.设置销毁的方法名，是否强制销毁方法为false</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">postProcessBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> candidate<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 判断当前BeanDefinition的注解元信息并赋值</span>
            <span class="token comment">//	1.@Lazy，延迟初始化Bean</span>
            <span class="token comment">//	2.@Primary，设置是否为主要的候选者等待注入</span>
            <span class="token comment">//	3.@DependsOn，设置初始化Bean所需依赖的beanName，工厂会优先初始化这些bean</span>
            <span class="token comment">//	4.@Role，设置Bean的角色，标记类和方法的身份，更精确的控制基于身份的权限访问</span>
            <span class="token comment">//	5.@Description，Bean描述</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">AnnotatedBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">processCommonDefinitionAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AnnotatedBeanDefinition</span><span class="token punctuation">)</span> candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 判断当前BeanDefinition，是否需要注册或者与当前容器内BeanDefinition冲突</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkCandidate</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> candidate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 包装一下</span>
                <span class="token class-name">BeanDefinitionHolder</span> definitionHolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 根据scopeMetadata判断当前holder需不需要动态代理，需要就赋值成代理对象</span>
                definitionHolder <span class="token operator">=</span>
                <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">applyScopedProxyMode</span><span class="token punctuation">(</span>scopeMetadata<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
                beanDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 注册到BeanFactory</span>
                <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> beanDefinitions<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findcandidatecomponents" tabindex="-1"><a class="header-anchor" href="#findcandidatecomponents" aria-hidden="true">#</a> findCandidateComponents</h3><p>ClassPathScanningCandidateComponentProvider#findCandidateComponents</p><p>|-ClassPathScanningCandidateComponentProvider#scanCandidateComponents</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> <span class="token function">scanCandidateComponents</span><span class="token punctuation">(</span><span class="token class-name">String</span> basePackage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> candidates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> packageSearchPath <span class="token operator">=</span> <span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">.</span><span class="token constant">CLASSPATH_ALL_URL_PREFIX</span> <span class="token operator">+</span>
			<span class="token function">resolveBasePackage</span><span class="token punctuation">(</span>basePackage<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">&#39;/&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourcePattern<span class="token punctuation">;</span>
	<span class="token comment">// 获取baskPackage下所有的class文件</span>
	<span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> resources <span class="token operator">=</span> <span class="token function">getResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span>packageSearchPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 获取clas文件的元数据信息（文件资源、注解元信息：类、父类、注解mapping也就是@Service也是一个@Component的原因）</span>
		<span class="token class-name">MetadataReader</span> metadataReader <span class="token operator">=</span> <span class="token function">getMetadataReaderFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMetadataReader</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 判断是不是@Component组件，这里判别是否是@Component的过滤器是来自ClassPathBeanDefinitionScanner定时时添加的</span>
        <span class="token comment">// 是不是@Conditional组件，是否需要跳过加载</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCandidateComponent</span><span class="token punctuation">(</span>metadataReader<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">ScannedGenericBeanDefinition</span> sbd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScannedGenericBeanDefinition</span><span class="token punctuation">(</span>metadataReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
			sbd<span class="token punctuation">.</span><span class="token function">setSource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// 判断是否满足注册条件（是不是接口、抽象类、有@Lookup注解）</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCandidateComponent</span><span class="token punctuation">(</span>sbd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				candidates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">else</span> <span class="token punctuation">{</span>

			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>

		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> candidates<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getresourcepatternresolver-getresources-packagesearchpath" tabindex="-1"><a class="header-anchor" href="#getresourcepatternresolver-getresources-packagesearchpath" aria-hidden="true">#</a> getResourcePatternResolver().getResources(packageSearchPath);</h3><p>|-ClassPathScanningCandidateComponentProvider#scanCandidateComponents</p><p>|-GenericApplicationContext#getResources</p><p>|-AbstractApplicationContext#getResources</p><p>|-PathMatchingResourcePatternResolver#getResources</p><p>|-PathMatchingResourcePatternResolver#findPathMatchingResources</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findPathMatchingResources</span><span class="token punctuation">(</span><span class="token class-name">String</span> locationPattern<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取根路径</span>
    <span class="token class-name">String</span> rootDirPath <span class="token operator">=</span> <span class="token function">determineRootDir</span><span class="token punctuation">(</span>locationPattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> subPattern <span class="token operator">=</span> locationPattern<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>rootDirPath<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rootDirResources <span class="token operator">=</span> <span class="token function">getResources</span><span class="token punctuation">(</span>rootDirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 扫描所有匹配的根路径下的class文件</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> rootDirResource <span class="token operator">:</span> rootDirResources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rootDirResource <span class="token operator">=</span> <span class="token function">resolveRootDirResource</span><span class="token punctuation">(</span>rootDirResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">URL</span> rootDirUrl <span class="token operator">=</span> rootDirResource<span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// bundle支持</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>equinoxResolveMethod <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> rootDirUrl<span class="token punctuation">.</span><span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;bundle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">URL</span> resolvedUrl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">)</span> <span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span>equinoxResolveMethod<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> rootDirUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedUrl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rootDirUrl <span class="token operator">=</span> resolvedUrl<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            rootDirResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlResource</span><span class="token punctuation">(</span>rootDirUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// vfs支持</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootDirUrl<span class="token punctuation">.</span><span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token constant">URL_PROTOCOL_VFS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">VfsResourceMatchingDelegate</span><span class="token punctuation">.</span><span class="token function">findMatchingResources</span><span class="token punctuation">(</span>rootDirUrl<span class="token punctuation">,</span> subPattern<span class="token punctuation">,</span> <span class="token function">getPathMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// jar支持</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token function">isJarURL</span><span class="token punctuation">(</span>rootDirUrl<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isJarResource</span><span class="token punctuation">(</span>rootDirResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">doFindPathMatchingJarResources</span><span class="token punctuation">(</span>rootDirResource<span class="token punctuation">,</span> rootDirUrl<span class="token punctuation">,</span> subPattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 文件系统</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">doFindPathMatchingFileResources</span><span class="token punctuation">(</span>rootDirResource<span class="token punctuation">,</span> subPattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","qidongliucheng-2.html.vue"]]);export{k as default};
