import{_ as i,o as l,c as a,a as e}from"./app-a6bbcd8f.js";const n={},d=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>title: 正则表达式
date: 2024/4/25
tags: [正则]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类" aria-hidden="true">#</a> 字符类</h2><ol><li>[abc]: 匹配一个字符, 该字符是a、b 或 c。</li><li>[^abc]: 匹配一个字符, 该字符不是a、b 或 c。</li><li>[a-z]: 匹配一个字符, 所有小写字母。</li><li>[A-Z]: 匹配一个字符, 所有大写字母。</li><li>[a-zA-Z]: 匹配一个字符, 大小写字母。</li><li>[0-9]: 匹配一个字符, 匹配所有数字。</li><li>[a-zA-Z0-9]: 匹配一个字符, 匹配所有大小写字母和数字。</li><li>[a-dm-p]: 匹配一个字符, 字母a到d | 字母m到p。</li></ol><h2 id="预定义类" tabindex="-1"><a class="header-anchor" href="#预定义类" aria-hidden="true">#</a> 预定义类</h2><ol><li>.: 匹配除换行符（\\n）之外的任何单个字符。</li><li>\\d: 匹配一个数字【[0-9]】。</li><li>\\D: 匹配一个非数字字符【[^0-9]】。</li><li>\\s: 匹配任何不可见字符，包括空格、制表符、换页符等等。</li><li>\\S: 匹配任何可见字符【[^\\s]】。</li><li>\\w: 匹配包括下划线的任何单词字符【[a-zA-Z0-9]】。</li><li>\\W: 匹配任何非单词字符【[^\\w]】。</li></ol><h2 id="数量词" tabindex="-1"><a class="header-anchor" href="#数量词" aria-hidden="true">#</a> 数量词</h2><p>eg: x表示某一字符，num表示出险次数</p><ol><li>x?: 匹配x, 0次或1次【num == 0 | num == 1】。</li><li>x*: 匹配x, 0次或多次【num &gt;= 0】。</li><li>x+: 匹配x, 1次或多次【num &gt;= 1】。</li><li>x{n}: 匹配x, n次【num == n】。</li><li>x{n,}: 匹配x, n次或多次【num &gt;= n】。</li><li>x{n,m}: 匹配x, n次到m次【num &gt;= n &amp;&amp; num &lt;= m】。</li></ol><h2 id="分组括号" tabindex="-1"><a class="header-anchor" href="#分组括号" aria-hidden="true">#</a> 分组括号</h2><ol><li>(): 分组括号。</li><li>(abc)*: 匹配abc, 0次或多次【num &gt;= 0】。</li></ol><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h2><ol><li>&amp;&amp;: 并且。</li><li>|: 或者。</li><li>^: 取反。</li></ol>`,12),t=[d];function r(s,c){return l(),a("div",null,t)}const o=i(n,[["render",r],["__file","zhengzebiaodashi.html.vue"]]);export{o as default};
