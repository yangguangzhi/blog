import{_ as a,o as t,c as e,a as n,b as s}from"./app-a6bbcd8f.js";const o={},c=n('<p>指程序运行过程中，对任意一个类都能获取其所有属性和方法，并且对任意一个对象都能调用其任意一个方法。 这种动态获取类和对象的信息，以及动态调用对象的方法的功能被称为Java的反射机制</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><ul><li>Class，用于获取类的属性、方法等信息</li><li>Field，类的成员变量，用于获取|设置类的成员属性</li><li>Method，类的方法，用于获取方法的描述信息或执行该方法</li><li>Constructor，类的构造方法</li></ul><h2 id="执行流程" tabindex="-1"><a class="header-anchor" href="#执行流程" aria-hidden="true">#</a> 执行流程</h2><ol><li>加载Class对象，JVM在运行时通过ClassLoader来加载Class对象，该对象是反射的核心</li><li>获取Class对象的方法 <ol><li>通过对象的getClass()</li><li>通过全限定名（包名 + 类名）</li><li>通过Class.forName()</li></ol></li><li>通过反射API访问类的信息，获取到Class对象后，就可以获取类的Field、Method、Constructor</li><li>调用方法或访问属性，通过步骤3获取到类的成员就可以调用方法或访问属性了</li></ol><h2 id="创建对象" tabindex="-1"><a class="header-anchor" href="#创建对象" aria-hidden="true">#</a> 创建对象</h2>',6),l=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"TIP"),s("p",null,"使用反射创建对象时，必须保证该类有一个公开的无参构造函数或指定的有参构造函数。否则会抛出NoSuchMethodException异常。")],-1),p=n(`<ol><li>通过类的无参构造器创建对象，使用Constructor的newInstance() 即可创建一个新的对象实例</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyClass</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">=</span> <span class="token class-name">MyClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MyClass</span> myObject <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>通过类的有参构造器创建对象，使用Constructor的newInstance() 传入相应的参数即可创建一个新的对象实例</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyClass</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">=</span> <span class="token class-name">MyClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MyClass</span> myObject <span class="token operator">=</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),i=[c,l,p];function r(u,d){return t(),e("div",null,i)}const h=a(o,[["render",r],["__file","fanshe.html.vue"]]);export{h as default};
