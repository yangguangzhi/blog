import{_ as e,o as a,c as n,b as t,d as r,a as l}from"./app-a6bbcd8f.js";const d={},i=t("p",null,"Java泛型（Generics）是JDK 5中引入的一个特性，它允许在编译时进行类型检查，提高了代码的可读性和安全性。 泛型的主要目的是在编译时限制类或方法可以操作的数据类型，以避免在运行时出现类型转换错误。",-1),s=t("h2",{id:"优点",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#优点","aria-hidden":"true"},"#"),r(" 优点")],-1),c=t("div",{class:"custom-container tip"},[t("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[t("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[t("circle",{cx:"12",cy:"12",r:"9"}),t("path",{d:"M12 8h.01"}),t("path",{d:"M11 12h1v4h1"})])]),t("p",{class:"custom-container-title"},"TIP"),t("p",null,"泛型的本质是参数化类型，在使用的时候再指定参数具体的值。这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口和泛型方法。")],-1),o=l('<ol><li>类型安全：泛型确保了数据类型的正确性，避免了类型转换异常。</li><li>代码重用：泛型提高了代码的复用性，可以用一个泛型类或方法来处理多种数据类型，而不需要为每种数据类型编写重复的代码。</li><li>提高代码可读性：泛型使得代码更加清晰易懂，可以清楚地看到数据类型的含义。</li><li>减少类型转换所带来的开销</li></ol><h2 id="泛型擦除" tabindex="-1"><a class="header-anchor" href="#泛型擦除" aria-hidden="true">#</a> 泛型擦除</h2><p>Java泛型的类型擦除是指，在编译时，泛型类型参数会被擦除，只保留原始类型。 这个过程是在编译器这个层次上实现的，生成的字节码中是不包含泛型中的类型信息的。 因此，在使用泛型的时候加上类型参数，在编译器编译的时候会去掉，这个过程成为类型擦除 。</p><h2 id="泛型标记限定" tabindex="-1"><a class="header-anchor" href="#泛型标记限定" aria-hidden="true">#</a> 泛型标记限定</h2><p>约定成俗的规则（其实用啥都可以）</p><table><thead><tr><th style="text-align:center;">标记</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">E（Element）</td><td style="text-align:center;">集合中使用，集合存放的元素</td></tr><tr><td style="text-align:center;">T（Type）</td><td style="text-align:center;">Java类，包括基本类和自定义类</td></tr><tr><td style="text-align:center;">K（Key）</td><td style="text-align:center;">Map中的Key</td></tr><tr><td style="text-align:center;">V（Value）</td><td style="text-align:center;">Map中的Value</td></tr><tr><td style="text-align:center;">N（Number）</td><td style="text-align:center;">数值类型</td></tr><tr><td style="text-align:center;">?</td><td style="text-align:center;">不确定的Java类型</td></tr></tbody></table>',6),h=[i,s,c,o];function x(_,g){return a(),n("div",null,h)}const y=e(d,[["render",x],["__file","fanxing.html.vue"]]);export{y as default};
